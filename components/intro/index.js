import { useMediaQuery } from '@studio-freight/hamo'
import cn from 'clsx'
import { useStore } from 'lib/store'
import { useEffect, useState } from 'react'
import s from './intro.module.scss'

export const Intro = () => {
  const isMobile = useMediaQuery('(max-width: 800px)')
  const [isLoaded, setIsLoaded] = useState(false)
  const [scroll, setScroll] = useState(false)
  const introOut = useStore(({ introOut }) => introOut)
  const setIntroOut = useStore(({ setIntroOut }) => setIntroOut)
  const lenis = useStore(({ lenis }) => lenis)

  useEffect(() => {
    setTimeout(() => {
      setIsLoaded(true)
    }, 1000)
  }, [])

  useEffect(() => {
    if (isMobile) {
      lenis.start()
      document.documentElement.classList.toggle('intro', false)
      return
    }

    if (!scroll) {
      document.documentElement.classList.toggle('intro', true)
    }

    if (!lenis) return
    if (scroll) {
      lenis.start()
      document.documentElement.classList.toggle('intro', false)
    } else {
      setTimeout(() => {
        lenis.stop()
      }, 0)

      document.documentElement.classList.toggle('intro', true)
    }
  }, [scroll, lenis, isMobile])

  return (
    <div
      className={cn(s.wrapper, isLoaded && s.out)}
      onTransitionEnd={(e) => {
        e.target.classList.forEach((value) => {
          if (value.includes('out')) {
            setScroll(true)
          }
          if (value.includes('show')) {
            setIntroOut(true)
          }
        })
      }}
    >
      <div className={cn(isLoaded && s.relative)}>
        <LNS isLoaded={isLoaded} fill={'var(--black)'} />
        <EI
          isLoaded={isLoaded}
          fill={'var(--black)'}
          className={cn(introOut && s.translate)}
        />
      </div>
    </div>
  )
}

export const Title = ({ className }) => {
  const introOut = useStore(({ introOut }) => introOut)

  return (
    <div className={className}>
      <div className={s.intros}>
      <LNS fill={'var(--pink)'} />
      <EI
        fill={'var(--pink)'}
        className={cn(introOut && s.translate, s.mobile)}
      />
      </div>
    </div>
  )
}

const LNS = ({ isLoaded, className, fill }) => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      fill="none"
      viewBox="0 0 1360 336"
      className={cn(s.lns, className)}
    >
      <g fill={fill}>
        <path
          className={cn(s.start, isLoaded && s.show)}
          style={{ '--index': 2 }}
          d="M 605.64 248.222 L 485.52 248.222 L 485.52 0.002 L 605.64 0.002 L 605.64 65.102 L 563.64 65.102 L 563.64 86.102 L 601.86 86.102 L 601.86 156.662 L 563.64 156.662 L 563.64 183.962 L 605.64 183.962 L 605.64 248.222 Z M 492.66 6.722 L 492.66 241.502 L 598.5 241.502 L 598.5 191.942 L 556.92 191.942 L 556.92 149.102 L 594.72 149.102 L 594.72 93.662 L 556.92 93.662 L 556.92 57.542 L 598.5 57.542 L 598.5 6.722 L 492.66 6.722 Z M 595.14 238.142 L 496.02 238.142 L 496.02 10.082 L 595.14 10.082 L 595.14 53.762 L 553.56 53.762 L 553.56 97.442 L 591.36 97.442 L 591.36 145.322 L 553.56 145.322 L 553.56 195.722 L 595.14 195.722 L 595.14 238.142 Z"
        />
        <path
          className={cn(s.start, isLoaded && s.show)}
          style={{ '--index': 1 }}
         d="M 237.72 248.222 L 156.24 248.222 L 156.24 0.002 L 250.74 0.002 A 98.4 98.4 0 0 1 265.982 1.098 Q 273.778 2.324 279.955 4.92 A 38.045 38.045 0 0 1 293.16 13.862 A 47.179 47.179 0 0 1 305.261 38.749 A 65.976 65.976 0 0 1 306.18 49.982 L 306.18 87.362 A 154.458 154.458 0 0 1 304.381 111.377 A 128.771 128.771 0 0 1 301.56 124.742 A 63.467 63.467 0 0 1 295.458 139.847 A 51.305 51.305 0 0 1 285.39 152.462 A 38.514 38.514 0 0 1 269.158 161.093 Q 263.274 162.67 256.3 162.916 A 74.227 74.227 0 0 1 253.68 162.962 L 237.72 162.962 L 237.72 248.222 Z M 163.8 7.562 L 163.8 240.662 L 230.58 240.662 L 230.58 154.982 L 253.68 154.982 Q 271.32 154.982 281.19 145.742 Q 291.06 136.502 295.05 121.172 A 122.53 122.53 0 0 0 298.431 101.319 A 155.128 155.128 0 0 0 299.04 87.362 L 299.04 49.982 A 51.263 51.263 0 0 0 297.24 36.054 A 38.892 38.892 0 0 0 287.7 19.322 Q 279.392 10.706 263.418 8.402 A 89.062 89.062 0 0 0 250.74 7.562 L 163.8 7.562 Z M 226.8 236.882 L 167.16 236.882 L 167.16 11.342 L 250.74 11.342 A 84.474 84.474 0 0 1 262.985 12.166 Q 269.148 13.071 274.061 14.972 A 30.94 30.94 0 0 1 285.18 22.052 Q 295.68 32.762 295.68 49.982 L 295.68 87.362 A 137.781 137.781 0 0 1 294.484 105.87 A 111.72 111.72 0 0 1 291.9 119.072 Q 288.12 133.562 279.09 142.382 Q 270.06 151.202 253.68 151.202 L 226.8 151.202 L 226.8 236.882 Z M 226.8 43.262 L 226.8 118.442 L 230.58 118.442 A 5.5 5.5 0 0 0 235.372 115.827 Q 236.036 114.843 236.521 113.49 A 15.907 15.907 0 0 0 236.88 112.352 Q 238.56 106.262 238.56 89.462 L 238.56 65.522 A 206.92 206.92 0 0 0 238.501 60.393 Q 238.304 52.485 237.451 48.843 A 10.296 10.296 0 0 0 236.88 47.042 A 6.238 6.238 0 0 0 234.99 44.564 Q 233.822 43.669 232.176 43.389 A 9.529 9.529 0 0 0 230.58 43.262 L 226.8 43.262 Z M 231.84 114.662 L 230.16 114.662 L 230.16 47.462 L 231.84 47.462 A 2.002 2.002 0 0 1 233.508 48.368 Q 234.095 49.165 234.423 50.665 A 13.594 13.594 0 0 1 234.57 51.452 A 27.17 27.17 0 0 1 234.784 53.324 Q 235.184 58.016 235.199 69.259 A 663.362 663.362 0 0 1 235.2 70.142 L 235.2 89.462 Q 235.2 103.047 234.287 108.416 A 17.261 17.261 0 0 1 233.94 110.042 A 43.719 43.719 0 0 1 233.519 111.493 Q 232.536 114.662 231.84 114.662 Z"
        />
        <path
          className={cn(s.start, isLoaded && s.show)}
          style={{ '--index': 3 }}
          d="M 925.26 248.222 L 752.22 248.222 L 786.66 0.002 L 891.66 0.002 L 925.26 248.222 Z M 792.96 7.562 L 760.62 240.662 L 831.6 240.662 L 834.12 207.902 L 840.42 207.902 L 843.78 240.662 L 916.86 240.662 L 885.36 7.562 L 792.96 7.562 Z M 828.24 236.882 L 764.82 236.882 L 795.9 11.342 L 882 11.342 L 912.24 236.882 L 846.72 236.882 L 843.78 204.122 L 830.34 204.122 L 828.24 236.882 Z M 837.48 59.222 L 830.76 174.722 L 843.78 174.722 L 837.48 59.222 Z M 840.42 170.942 L 834.54 170.942 L 837.48 126.002 L 840.42 170.942 Z"
        />
      </g>
    </svg>
  )
}

const EI = ({ isLoaded, className, fill }) => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      fill="none"
      viewBox="0 0 1360 336"
      className={cn(s.ei, className)}
    >
      <g fill={fill}>
      <path
          className={cn(s.start, isLoaded && s.show)}
          style={{ '--index': 6 }}
          d="M 1015.14 248.222 L 929.46 248.222 L 929.46 0.002 L 1023.96 0.002 A 98.4 98.4 0 0 1 1039.202 1.098 Q 1046.998 2.324 1053.175 4.92 A 38.045 38.045 0 0 1 1066.38 13.862 A 47.179 47.179 0 0 1 1078.481 38.749 A 65.976 65.976 0 0 1 1079.4 49.982 L 1079.4 189.002 A 103.536 103.536 0 0 1 1078.209 205.33 Q 1074.898 225.992 1062.39 235.412 A 58.046 58.046 0 0 1 1043.898 244.499 Q 1036.113 246.826 1026.825 247.698 A 125.04 125.04 0 0 1 1015.14 248.222 Z M 937.02 7.562 L 937.02 240.662 L 1015.14 240.662 A 103.757 103.757 0 0 0 1031.358 239.477 Q 1039.782 238.141 1046.592 235.299 A 47.05 47.05 0 0 0 1057.35 229.112 Q 1069.004 220.084 1071.549 200.663 A 89.925 89.925 0 0 0 1072.26 189.002 L 1072.26 49.982 A 51.263 51.263 0 0 0 1070.46 36.054 A 38.892 38.892 0 0 0 1060.92 19.322 Q 1052.612 10.706 1036.638 8.402 A 89.062 89.062 0 0 0 1023.96 7.562 L 937.02 7.562 Z M 1015.14 236.882 L 940.38 236.882 L 940.38 11.342 L 1023.96 11.342 A 84.474 84.474 0 0 1 1036.205 12.166 Q 1042.368 13.071 1047.281 14.972 A 30.94 30.94 0 0 1 1058.4 22.052 Q 1068.9 32.762 1068.9 49.982 L 1068.9 189.002 A 81.317 81.317 0 0 1 1067.9 202.26 Q 1066.771 209.071 1064.367 214.364 A 29.962 29.962 0 0 1 1054.62 226.592 A 49.434 49.434 0 0 1 1039.587 233.76 Q 1029.02 236.882 1015.14 236.882 Z M 1000.02 44.942 L 1000.02 206.222 L 1005.48 206.222 A 6.434 6.434 0 0 0 1007.46 205.935 A 4.858 4.858 0 0 0 1010.31 203.492 Q 1011.78 200.762 1011.78 196.982 L 1011.78 54.602 A 19.26 19.26 0 0 0 1011.497 51.136 Q 1010.408 45.217 1005.14 44.954 A 10.011 10.011 0 0 0 1004.64 44.942 L 1000.02 44.942 Z M 1005.06 202.442 L 1003.8 202.442 L 1003.8 48.722 L 1005.48 48.722 A 1.945 1.945 0 0 1 1007.257 49.862 Q 1007.79 50.833 1007.94 52.632 A 18.63 18.63 0 0 1 1008 54.182 L 1008 196.982 Q 1008 200.339 1006.888 201.632 A 2.294 2.294 0 0 1 1005.06 202.442 Z"
        />
        <path
          style={{ '--index': 5 }}
          className={cn(s.start, isLoaded && s.show)}
          d="M 693.42 248.222 L 611.94 248.222 L 611.94 0.002 L 706.44 0.002 A 98.4 98.4 0 0 1 721.682 1.098 Q 729.478 2.324 735.655 4.92 A 38.045 38.045 0 0 1 748.86 13.862 A 47.179 47.179 0 0 1 760.961 38.749 A 65.976 65.976 0 0 1 761.88 49.982 L 761.88 87.362 A 154.458 154.458 0 0 1 760.081 111.377 A 128.771 128.771 0 0 1 757.26 124.742 A 63.467 63.467 0 0 1 751.158 139.847 A 51.305 51.305 0 0 1 741.09 152.462 A 38.514 38.514 0 0 1 724.858 161.093 Q 718.974 162.67 712 162.916 A 74.227 74.227 0 0 1 709.38 162.962 L 693.42 162.962 L 693.42 248.222 Z M 619.5 7.562 L 619.5 240.662 L 686.28 240.662 L 686.28 154.982 L 709.38 154.982 Q 727.02 154.982 736.89 145.742 Q 746.76 136.502 750.75 121.172 A 122.53 122.53 0 0 0 754.131 101.319 A 155.128 155.128 0 0 0 754.74 87.362 L 754.74 49.982 A 51.263 51.263 0 0 0 752.94 36.054 A 38.892 38.892 0 0 0 743.4 19.322 Q 735.092 10.706 719.118 8.402 A 89.062 89.062 0 0 0 706.44 7.562 L 619.5 7.562 Z M 682.5 236.882 L 622.86 236.882 L 622.86 11.342 L 706.44 11.342 A 84.474 84.474 0 0 1 718.685 12.166 Q 724.848 13.071 729.761 14.972 A 30.94 30.94 0 0 1 740.88 22.052 Q 751.38 32.762 751.38 49.982 L 751.38 87.362 A 137.781 137.781 0 0 1 750.184 105.87 A 111.72 111.72 0 0 1 747.6 119.072 Q 743.82 133.562 734.79 142.382 Q 725.76 151.202 709.38 151.202 L 682.5 151.202 L 682.5 236.882 Z M 682.5 43.262 L 682.5 118.442 L 686.28 118.442 A 5.5 5.5 0 0 0 691.072 115.827 Q 691.736 114.843 692.221 113.49 A 15.907 15.907 0 0 0 692.58 112.352 Q 694.26 106.262 694.26 89.462 L 694.26 65.522 A 206.92 206.92 0 0 0 694.201 60.393 Q 694.004 52.485 693.151 48.843 A 10.296 10.296 0 0 0 692.58 47.042 A 6.238 6.238 0 0 0 690.69 44.564 Q 689.522 43.669 687.876 43.389 A 9.529 9.529 0 0 0 686.28 43.262 L 682.5 43.262 Z M 687.54 114.662 L 685.86 114.662 L 685.86 47.462 L 687.54 47.462 A 2.002 2.002 0 0 1 689.208 48.368 Q 689.795 49.165 690.123 50.665 A 13.594 13.594 0 0 1 690.27 51.452 A 27.17 27.17 0 0 1 690.484 53.324 Q 690.884 58.016 690.899 69.259 A 663.362 663.362 0 0 1 690.9 70.142 L 690.9 89.462 Q 690.9 103.047 689.987 108.416 A 17.261 17.261 0 0 1 689.64 110.042 A 43.719 43.719 0 0 1 689.219 111.493 Q 688.236 114.662 687.54 114.662 Z"
        />
        <path
          className={cn(s.start, isLoaded && s.show)}
          style={{ '--index': 4 }}
          d="M 383.88 236.882 L 323.4 236.882 L 323.4 11.342 L 407.82 11.342 A 84.874 84.874 0 0 1 420.256 12.189 Q 426.633 13.136 431.722 15.142 A 32.368 32.368 0 0 1 442.68 22.052 A 35.936 35.936 0 0 1 453.277 44.255 A 49.451 49.451 0 0 1 453.6 49.982 L 453.6 84.422 Q 453.6 101.222 447.3 113.402 Q 441 125.582 423.36 130.622 Q 431.76 131.462 437.22 136.502 A 21.52 21.52 0 0 1 440.509 140.472 Q 443.217 144.568 445.565 151.064 A 94.19 94.19 0 0 1 446.88 154.982 L 467.04 236.882 L 403.2 236.882 L 383.88 141.542 L 383.88 236.882 Z M 319.62 7.562 L 319.62 240.662 L 387.24 240.662 L 387.24 175.982 L 399.84 240.662 L 471.66 240.662 L 451.08 156.662 A 155.36 155.36 0 0 0 448.751 150.325 Q 446.447 144.485 444.277 140.718 A 34.339 34.339 0 0 0 443.1 138.812 A 35.41 35.41 0 0 0 439.632 134.373 Q 437.445 132.013 435.024 130.412 A 21.939 21.939 0 0 0 434.7 130.202 Q 446.88 123.062 451.92 110.462 Q 456.96 97.862 456.96 84.422 L 456.96 49.982 A 48.429 48.429 0 0 0 454.828 35.302 A 39.672 39.672 0 0 0 445.41 19.532 Q 436.948 10.762 420.707 8.417 A 90.431 90.431 0 0 0 407.82 7.562 L 319.62 7.562 Z M 480.9 248.222 L 312.48 248.222 L 312.48 0.002 L 407.82 0.002 Q 437.64 0.002 451.08 14.072 A 48.021 48.021 0 0 1 464.123 42.704 A 64.993 64.993 0 0 1 464.52 49.982 L 464.52 84.422 A 91.087 91.087 0 0 1 461.389 108.49 A 85.376 85.376 0 0 1 460.95 110.042 Q 457.38 122.222 447.3 130.622 Q 450.66 134.402 452.55 139.022 Q 454.44 143.642 457.38 152.042 L 480.9 248.222 Z M 383.46 43.262 L 383.46 114.662 L 387.24 114.662 A 5.444 5.444 0 0 0 391.995 112.013 Q 392.651 111.025 393.135 109.67 A 16.632 16.632 0 0 0 393.54 108.362 Q 395.192 102.166 395.22 87.036 A 283.175 283.175 0 0 0 395.22 86.522 L 395.22 65.522 A 206.92 206.92 0 0 0 395.161 60.393 Q 394.964 52.485 394.111 48.843 A 10.296 10.296 0 0 0 393.54 47.042 A 6.238 6.238 0 0 0 391.65 44.564 Q 390.482 43.669 388.836 43.389 A 9.529 9.529 0 0 0 387.24 43.262 L 383.46 43.262 Z M 388.5 110.882 L 386.82 110.882 L 386.82 47.462 L 388.5 47.462 A 2.002 2.002 0 0 1 390.168 48.368 Q 390.755 49.165 391.083 50.665 A 13.594 13.594 0 0 1 391.23 51.452 A 27.17 27.17 0 0 1 391.444 53.324 Q 391.844 58.016 391.859 69.259 A 663.362 663.362 0 0 1 391.86 70.142 L 391.86 86.522 A 285.881 285.881 0 0 1 391.8 92.634 Q 391.584 102.652 390.6 106.262 A 43.719 43.719 0 0 1 390.179 107.713 Q 389.196 110.882 388.5 110.882 Z"
        />
      </g>
    </svg>
  )
}
